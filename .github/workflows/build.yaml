name: Build font files
# 远程遥控其他仓库构建字体
# 需要 PAT 以触发工作流程，在 Settings > Secrets 中添加 MAIN_REPO_PAT
# PAT 权限需要包含 write contents

on:
  workflow_dispatch:
    inputs:
      commit_build_result:
        description: '将构建结果提交到仓库'
        type: boolean
      
      std:
        description: '原版'
        type: boolean
        default: true
      lite:
        description: 'Lite'
        type: boolean
        default: true
      gb:
        description: 'GB'
        type: boolean
        default: true
      gb_lite:
        description: 'GB Lite'
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Convert selection to array
        id: convert_selection
        run: |
          # Convert the inputs to an array
          selection=()
          if [ ${{ inputs.std }} == true ]; then
            selection+=("LxgwWenKai")
          fi
          if [ ${{ inputs.lite }} == true ]; then
            selection+=("LxgwWenKai-Lite")
          fi
          if [ ${{ inputs.gb }} == true ]; then
            selection+=("LxgwWenKaiGB")
          fi
          if [ ${{ inputs.gb_lite }} == true ]; then
            selection+=("LxgwWenKaiGB-Lite")
          fi

          # Save the array as a JSON string to github env
          selection_json=$(printf '%s\n' "${selection[@]}" | jq -R . | jq -s -c .)
          echo "selection_json=${selection_json}" >> $GITHUB_ENV

      - name: Trigger workflow in other repos
        run: |
          # Set the required variables
          repo_owner="lxgw"
          readarray -t repo_names < <(echo "$selection_json" | jq -r '.[]')
          event_type="build"

          for repo_name in "${repo_names[@]}"; do
            echo "Triggering build for $repo_name"
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.MAIN_REPO_PAT }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
              -d '{
                "event_type": "'"$event_type"'",
                "client_payload": {
                  "commit_build_result": ${{ inputs.commit_build_result }}
                }
              }'
          done